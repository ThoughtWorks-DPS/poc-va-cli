// Code generated by MockGen. DO NOT EDIT.
// Source: ./clients/api_client.go

// Package clients is a generated GoMock package.
package clients

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockApiClient is a mock of ApiClient interface
type MockApiClient struct {
	ctrl     *gomock.Controller
	recorder *MockApiClientMockRecorder
}

// MockApiClientMockRecorder is the mock recorder for MockApiClient
type MockApiClientMockRecorder struct {
	mock *MockApiClient
}

// NewMockApiClient creates a new mock instance
func NewMockApiClient(ctrl *gomock.Controller) *MockApiClient {
	mock := &MockApiClient{ctrl: ctrl}
	mock.recorder = &MockApiClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockApiClient) EXPECT() *MockApiClientMockRecorder {
	return m.recorder
}

// GetHello mocks base method
func (m *MockApiClient) GetHello() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHello")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetHello indicates an expected call of GetHello
func (mr *MockApiClientMockRecorder) GetHello() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHello", reflect.TypeOf((*MockApiClient)(nil).GetHello))
}

// GetApiInfo mocks base method
func (m *MockApiClient) GetApiInfo() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetApiInfo")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetApiInfo indicates an expected call of GetApiInfo
func (mr *MockApiClientMockRecorder) GetApiInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApiInfo", reflect.TypeOf((*MockApiClient)(nil).GetApiInfo))
}