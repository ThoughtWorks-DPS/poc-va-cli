version: 2.1

orbs:
  win: circleci/windows@2.2.0
  git-tag: twdps/git-tag-orb@0.1.0

executors:
  go-agent:
    docker:
      - image: cimg/go:1.15.2

  base-agent:
    docker:
      - image: cimg/base:stable

  linux-i386-agent:
    docker:
      - image: i386/buildpack-deps

jobs:
  smoke-test-linux:
    executor: linux-i386-agent
    environment:
      IMAGE: "Linux_i386.tar.gz"
      PROJECT: "poc-va-cli"
    steps:
      - checkout
      - run: |
          ./test/smoke/smoke-test.sh

  smoke-test-macos:
    macos:
      xcode: 12.1.0
    environment:
      IMAGE: "macOS_x86_64.tar.gz"
      PROJECT: "poc-va-cli"
    steps:
      - checkout
      - run: |
          ./test/smoke/smoke-test.sh

  smoke-test-win:
    executor:
      name: win/default
      shell: powershell.exe
    steps:
      - checkout
      - run:
          shell: powershell.exe
          command: |
            ./test/smoke/smoke-test.ps1

  check-for-secrets:
    executor: base-agent
    steps:
      - checkout
      - run: |
          curl -sL https://raw.githubusercontent.com/awslabs/git-secrets/master/git-secrets >> git-secrets
          chmod +x git-secrets
          ./git-secrets --add-provider -- curl https://raw.githubusercontent.com/ThoughtWorks-DPS/poc-resources/master/git-secrets-pattern.txt
          ./git-secrets --scan

  unit-test:
    executor: go-agent
    environment:
      AWS_REGION: "us-west-2"
    steps:
      - checkout
      - run:
          name: install chamber
          command: |
            curl -sL https://raw.githubusercontent.com/ThoughtWorks-DPS/poc-resources/main/pipeline_helpers/install_chamber.sh | bash
      - run:
          name: Setup Code Climate test-reporter
          command: |
            # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          command: |
            ./cc-test-reporter before-build
            go test -v ./... -coverprofile=c.out
            ./ccThresholdCheck.sh
      - run:
            name: Publish codeclimate report
            command: |
              sudo apt-get update
              sudo apt-get install awscli
              curl -sL https://raw.githubusercontent.com/ThoughtWorks-DPS/poc-resources/main/pipeline_helpers/assume_role.sh | bash arn:aws:iam::$AWS_ACCOUNT_ID:role/DPSReadOnlyRole poc-va-session
              chamber exec lhdi/platform/code-climate/cli -- ./cc-test-reporter after-build upload-coverage -t gocov -p voltron --exit-code $?

  build:
    executor: go-agent
    steps:
      - checkout
      - run: go run main.go
  release:
    executor: go-agent
    steps:
      - checkout
      - run:
          name: install chamber
          command: |
            curl -sL https://raw.githubusercontent.com/ThoughtWorks-DPS/poc-resources/main/pipeline_helpers/install_chamber.sh | bash
      - run:
          name: Publish Release
          command: |
            export GITHUB_TOKEN=$(chamber read lhdi/platform/github access_token -q)
            curl -sL https://git.io/goreleaser | bash

workflows:
  version: 2
  main:
    jobs:
      - check-for-secrets
      - build
      - unit-test:
          context: dps-va-di
      - hold:
          type: approval
          requires:
            - check-for-secrets
            - build
            - unit-test
      - approve-patch-tag:
          type: approval
          requires:
            - hold
      - approve-minor-tag:
          type: approval
          requires:
            - hold
          post-steps:
      - approve-major-tag:
          type: approval
          requires:
            - hold
      - git-tag/apply:
          name: apply git patch
          semantic-version: patch
          fingerprint: $SVC_FINGERPRINT
          context: dps-va-di
          requires:
            - approve-patch-tag
      - git-tag/apply:
          name: apply git minor
          semantic-version: minor
          fingerprint: $SVC_FINGERPRINT
          context: dps-va-di
          requires:
            - approve-minor-tag
      - git-tag/apply:
          name: apply git major
          semantic-version: major
          fingerprint: $SVC_FINGERPRINT
          context: dps-va-di
          requires:
            - approve-major-tag
      - release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]+(\.[0-9]+)*(-.*)*/
      - smoke-test-linux:
          requires:
            - release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]+(\.[0-9]+)*(-.*)*/
      - smoke-test-macos:
          requires:
            - release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]+(\.[0-9]+)*(-.*)*/
  weekly:
    triggers:
      - schedule:
          cron: "0 0 * * 5"
          filters:
            branches:
              only:
                - main
    jobs:
      - smoke-test-win
